/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.utsguiv2;

import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.*;
import java.util.HashMap;
import java.util.Map;

/**
 *
 * @author excee
 */
public class Calc extends javax.swing.JFrame {

    /**
     * Creates new form
     */
    String namaPelanggan,
            nomorPelanggan,
            alamatPelanggan,
            processor,
            storage0,
            storage1,
            pilihProcessor,
            pilihMotherboard,
            pilihRam,
            pilihGraphiccard,
            pilihPsu,
            pilihStorage0,
            pilihStorage1,
            pilihCase,
            channel,
            kibot,
            mouse,
            kursi,
            mic,
            speaker,
            monitor;

    int answer;

    // Map untuk harga item
    private Map<String, Long> processorPrices = new HashMap<>();
    private Map<String, Long> motherboardPrices = new HashMap<>();
    private Map<String, Long> ramPrices = new HashMap<>();
    private Map<String, Long> graphicCardPrices = new HashMap<>();
    private Map<String, Long> psuPrices = new HashMap<>();
    private Map<String, Long> storagePrices = new HashMap<>();
    private Map<String, Long> casePrices = new HashMap<>();

    public Calc() {
        initComponents();
        
        getContentPane().setBackground(Color.decode("#295F98"));
        // Mengisi harga untuk tiap item
        processorPrices.put("Intel Core i3 1315U", 2800000L);
        processorPrices.put("Intel Core i3 1305U", 2600000L);
        processorPrices.put("Intel Core i5 13600HX", 5900000L);
        processorPrices.put("Intel Core i7 13850HX", 8500000L);
        processorPrices.put("AMD Ryzen 9 7950X3D", 14000000L);
        processorPrices.put("AMD Ryzen 7 7800X3D", 12000000L);
        processorPrices.put("AMD Ryzen 5 7600X", 7000000L);
        processorPrices.put("AMD Ryzen 5 7500X", 6500000L);

        motherboardPrices.put("MSI MAG B760 TOMAHAWK WIFI Intel", 3500000L);
        motherboardPrices.put("Asus ROG MAXIMUS Z790 HERO Intel", 7500000L);
        motherboardPrices.put("Gigabyte Z790 AORUS ELITE AX Intel", 6000000L);
        motherboardPrices.put("MSI MEG Z790 GODLIKE MAX WIFI 7 Intel", 12000000L);
        motherboardPrices.put("MSI MEG X670E ACE AMD", 11500000L);
        motherboardPrices.put("MSI MAG X670 TOMAHAWK WIFI AMD", 8500000L);
        motherboardPrices.put("ASUS ROG Strix X670E-E Gaming WiFi AMD", 10500000L);
        motherboardPrices.put("Gigabyte X670E AORUS MASTER AMD", 11000000L);

        // RAM prices
        ramPrices.put("Corsair Dominator Platinum RGB DDR5 16gb", 810000L);
        ramPrices.put("G.Skill Trident Z5 RGB DDR5 32gb", 980000L);
        ramPrices.put("Kingston FURY Beast DDR5 8gb", 750000L);
        ramPrices.put("MSI Spatium DDR5 16gb", 780000L);

        // Graphic Card prices
        graphicCardPrices.put("MSI RTX 3090 Ti Suprim X", 6000000L);
        graphicCardPrices.put("MSI RTX 3070 Gaming X Trio", 5600000L);
        graphicCardPrices.put("MSI RTX 3060 Ventus 2X OC", 4500000L);
        graphicCardPrices.put("MSI RTX 4090 SUPRIM X", 35000000L);

        // PSU prices
        psuPrices.put("Cooler Master V Gold 1000W 80+ Gold", 600000L);
        psuPrices.put("Corsair RMx Series 1200W 80+ Gold", 900000L);

        // Storage prices (SSD / HDD)
        storagePrices.put("128GB", 150000L);
        storagePrices.put("256GB", 212000L);
        storagePrices.put("512GB", 512000L);
        storagePrices.put("1TB", 1200000L);
        storagePrices.put("2TB", 1500000L);

        // Case Prices
        casePrices.put("NZXT H510 Elite", 450000L);
        casePrices.put("NZXT H510 Flow", 367000L);

        JOptionPane.showMessageDialog(this, "Selamat datang di Kalkulator!", "Welcome", JOptionPane.INFORMATION_MESSAGE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    private long calculateTotal() {

        // Mengambil nilai pilihan dari ComboBox
        String pilihProcessor = cmbProci.getSelectedItem().toString();
        String pilihMotherboard = cmbMobo.getSelectedItem().toString();
        String pilihRam = cmbRam.getSelectedItem().toString();
        String pilihGraphiccard = cmbvga.getSelectedItem().toString();
        String pilihPsu = cmbpsu.getSelectedItem().toString();
        String pilihStorage0 = cmbstor0.getSelectedItem().toString();
        String pilihStorage1 = cmbstor1.getSelectedItem().toString();
        String pilihCase = cmbCase.getSelectedItem().toString();

        // Mengambil pilihan apakah RAM Dual Channel
        boolean isDualChannel = chckDual.isSelected();

        // Menentukan harga dari pilihan yang dipilih
        long hargaProcessor = processorPrices.getOrDefault(pilihProcessor, 0L);
        long hargaMotherboard = motherboardPrices.getOrDefault(pilihMotherboard, 0L);
        long hargaRam = ramPrices.getOrDefault(pilihRam, 0L);
        long hargaVga = graphicCardPrices.getOrDefault(pilihGraphiccard, 0L);
        long hargaPsu = psuPrices.getOrDefault(pilihPsu, 0L);
        long hargaStorage0 = storagePrices.getOrDefault(pilihStorage0, 0L);
        long hargaStorage1 = storagePrices.getOrDefault(pilihStorage1, 0L);
        long hargaCase = casePrices.getOrDefault(pilihCase, 0L);

        // Jika RAM Dual Channel dipilih, kalikan harga RAM dengan 2
        if (isDualChannel) {
            hargaRam *= 2; // Double harga RAM untuk Dual Channel
        }

        // Hitung total harga semua part
        return hargaProcessor + hargaMotherboard + hargaRam + hargaVga + hargaPsu + hargaStorage0 + hargaStorage1 + hargaCase;

    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupProcessor = new javax.swing.ButtonGroup();
        groupStorage0 = new javax.swing.ButtonGroup();
        groupStorage1 = new javax.swing.ButtonGroup();
        txtTools = new javax.swing.JLabel();
        txtProci = new javax.swing.JLabel();
        cmbProci = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        cmbMobo = new javax.swing.JComboBox<>();
        txtram = new javax.swing.JLabel();
        cmbRam = new javax.swing.JComboBox<>();
        txtvga = new javax.swing.JLabel();
        cmbvga = new javax.swing.JComboBox<>();
        txtpsu = new javax.swing.JLabel();
        cmbpsu = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        rbhdd0 = new javax.swing.JRadioButton();
        rbssd0 = new javax.swing.JRadioButton();
        rbhdd1 = new javax.swing.JRadioButton();
        rbssd1 = new javax.swing.JRadioButton();
        cmbstor0 = new javax.swing.JComboBox<>();
        cmbstor1 = new javax.swing.JComboBox<>();
        txtcase = new javax.swing.JLabel();
        cmbCase = new javax.swing.JComboBox<>();
        txtbundle = new javax.swing.JLabel();
        chckkibot = new javax.swing.JCheckBox();
        chckmouse = new javax.swing.JCheckBox();
        chckspeaker = new javax.swing.JCheckBox();
        chckmonitor = new javax.swing.JCheckBox();
        chckkursi = new javax.swing.JCheckBox();
        chckmic = new javax.swing.JCheckBox();
        btnSetuju = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnKeluar = new javax.swing.JButton();
        chckDual = new javax.swing.JCheckBox();
        btnPesan = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtHasil = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtTools.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 24)); // NOI18N
        txtTools.setForeground(new java.awt.Color(255, 255, 255));
        txtTools.setText("PC Build Tools");

        txtProci.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        txtProci.setForeground(new java.awt.Color(255, 255, 255));
        txtProci.setText("Processor's");

        cmbProci.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Intel Core i3 1315U", "Intel core i3 1305U", "Intel Core i5 13600HX", "Intel Core i7 13850HX", "AMD Ryzen 9 7950X3D", "AMD Ryzen 7 7800X3D", "AMD Ryzen 5 7600X", "AMD Ryzen 5 7500X" }));
        cmbProci.setToolTipText("");
        cmbProci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProciActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Motherboard");

        cmbMobo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "MSI MAG B760 TOMAHAWK WIFI intel", "Asus ROG MAXIMUS Z790 HERO intel", "Gigabyte Z790 AORUS ELITE AX intel", "MSI MEG Z790 GODLIKE MAX WIFI 7 intel", "MSI MEG X670E ACE AMD", "MSI MAG X670 TOMAHAWK WIFI AMD", "ASUS ROG Strix X670E-E Gaming WiFi AMD", "Gigabyte X670E AORUS MASTER AMD" }));

        txtram.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        txtram.setForeground(new java.awt.Color(255, 255, 255));
        txtram.setText("RAM");

        cmbRam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Corsair Dominator Platinum RGB DDR5 16gb", "G.Skill Trident Z5 RGB DDR5 32gb", "Kingston FURY Beast DDR5 8gb", "MSI Spatium DDR5 16gb", " ", " " }));

        txtvga.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        txtvga.setForeground(new java.awt.Color(255, 255, 255));
        txtvga.setText("Graphic Card");

        cmbvga.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "MSI RTX 3090 Ti Suprim X", "MSI RTX 3070 Gaming X Trio", "MSI RTX 3060 Ventus 2X OC", "MSI RTX 4090 SUPRIM X" }));

        txtpsu.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        txtpsu.setForeground(new java.awt.Color(255, 255, 255));
        txtpsu.setText("PSU");

        cmbpsu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Corsair RMx Series 1200W 80+ Gold", "Cooler Master V Gold 1000W 80+ Gold", " " }));

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Storage 0");

        jLabel3.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Storage 1");

        groupStorage0.add(rbhdd0);
        rbhdd0.setForeground(new java.awt.Color(255, 255, 255));
        rbhdd0.setText("HDD");

        groupStorage0.add(rbssd0);
        rbssd0.setForeground(new java.awt.Color(255, 255, 255));
        rbssd0.setText("SSD");

        groupStorage1.add(rbhdd1);
        rbhdd1.setForeground(new java.awt.Color(255, 255, 255));
        rbhdd1.setText("HDD");

        groupStorage1.add(rbssd1);
        rbssd1.setForeground(new java.awt.Color(255, 255, 255));
        rbssd1.setText("SSD");

        cmbstor0.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "128gb", "256gb", "512gb", "1tb", "2tb" }));

        cmbstor1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "128gb", "256gb", "512gb", "1tb", "2tb" }));

        txtcase.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        txtcase.setForeground(new java.awt.Color(255, 255, 255));
        txtcase.setText("Case");

        cmbCase.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "NZXT H510 Elite", "NZXT H510 Flow" }));

        txtbundle.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        txtbundle.setForeground(new java.awt.Color(255, 255, 255));
        txtbundle.setText("Bundle");

        chckkibot.setForeground(new java.awt.Color(255, 255, 255));
        chckkibot.setText("Keyboard");
        chckkibot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chckkibotActionPerformed(evt);
            }
        });

        chckmouse.setForeground(new java.awt.Color(255, 255, 255));
        chckmouse.setText("Mouse + pad");

        chckspeaker.setForeground(new java.awt.Color(255, 255, 255));
        chckspeaker.setText("Speaker");
        chckspeaker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chckspeakerActionPerformed(evt);
            }
        });

        chckmonitor.setForeground(new java.awt.Color(255, 255, 255));
        chckmonitor.setText("Monitor");

        chckkursi.setForeground(new java.awt.Color(255, 255, 255));
        chckkursi.setText("Gaming Chair");
        chckkursi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chckkursiActionPerformed(evt);
            }
        });

        chckmic.setForeground(new java.awt.Color(255, 255, 255));
        chckmic.setText("Mic + Arm");
        chckmic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chckmicActionPerformed(evt);
            }
        });

        btnSetuju.setBackground(new java.awt.Color(255, 102, 0));
        btnSetuju.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btnSetuju.setForeground(new java.awt.Color(255, 255, 255));
        btnSetuju.setText("Cek");
        btnSetuju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetujuActionPerformed(evt);
            }
        });

        btnHapus.setBackground(new java.awt.Color(255, 102, 0));
        btnHapus.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btnHapus.setForeground(new java.awt.Color(255, 255, 255));
        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnKeluar.setBackground(new java.awt.Color(255, 102, 0));
        btnKeluar.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btnKeluar.setForeground(new java.awt.Color(255, 255, 255));
        btnKeluar.setText("Keluar");
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });

        chckDual.setForeground(new java.awt.Color(255, 255, 255));
        chckDual.setText("Dual Channel");

        btnPesan.setBackground(new java.awt.Color(255, 102, 0));
        btnPesan.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btnPesan.setForeground(new java.awt.Color(255, 255, 255));
        btnPesan.setText("Pesan");
        btnPesan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesanActionPerformed(evt);
            }
        });

        txtHasil.setColumns(20);
        txtHasil.setRows(5);
        jScrollPane2.setViewportView(txtHasil);

        jLabel4.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                        new java.net.URL("file:/C:/Users/excee/OneDrive/Documents/NetBeansProjects/UTSGui/UTSGui/UtsGuiV2/src/main/java/asset/MSI.png")
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());

        jLabel5.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                        new java.net.URL("file:/C:/Users/excee/OneDrive/Documents/NetBeansProjects/UTSGui/UTSGui/UtsGuiV2/src/main/java/asset/ROG.png")
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());

        jLabel6.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                        new java.net.URL("file:/C:/Users/excee/OneDrive/Documents/NetBeansProjects/UTSGui/UTSGui/UtsGuiV2/src/main/java/asset/Lenovo.png")
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());

        jLabel7.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                        new java.net.URL("file:/C:/Users/excee/OneDrive/Documents/NetBeansProjects/UTSGui/UTSGui/UtsGuiV2/src/main/java/asset/AORUS.png")
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());

        jLabel8.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                        new java.net.URL("file:/C:/Users/excee/OneDrive/Documents/NetBeansProjects/UTSGui/UTSGui/UtsGuiV2/src/main/java/asset/NVIDIA.png")
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());

        jLabel9.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                        new java.net.URL("file:/C:/Users/excee/OneDrive/Documents/NetBeansProjects/UTSGui/UTSGui/UtsGuiV2/src/main/java/asset/Corsair.png")
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());

        jLabel10.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                        new java.net.URL("file:/C:/Users/excee/OneDrive/Documents/NetBeansProjects/UTSGui/UTSGui/UtsGuiV2/src/main/java/asset/INTEL.png")
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());

        jLabel11.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                        new java.net.URL("file:/C:/Users/excee/OneDrive/Documents/NetBeansProjects/UTSGui/UTSGui/UtsGuiV2/src/main/java/asset/AMD.png")
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(57, 57, 57)
                                        .addComponent(cmbMobo, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtProci)
                                        .addGap(70, 70, 70)
                                        .addComponent(cmbProci, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(txtpsu)
                                    .addGap(128, 128, 128)
                                    .addComponent(cmbpsu, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtram)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chckDual)
                                .addGap(18, 18, 18)
                                .addComponent(cmbRam, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rbhdd0)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rbssd0))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(rbhdd1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rbssd1)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbstor1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbstor0, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtcase)
                                .addGap(47, 47, 47)
                                .addComponent(cmbCase, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(txtbundle)
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chckkibot)
                                    .addComponent(chckspeaker))
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chckmouse)
                                    .addComponent(chckmonitor))
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chckmic)
                                    .addComponent(chckkursi)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtvga)
                                .addGap(62, 62, 62)
                                .addComponent(cmbvga, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtTools))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(16, 16, 16))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1050, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 5, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(btnSetuju, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPesan, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(153, 153, 153)
                        .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(txtTools)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtProci)
                        .addComponent(jLabel2)
                        .addComponent(rbhdd0)
                        .addComponent(rbssd0)
                        .addComponent(cmbstor0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cmbProci, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbMobo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(rbhdd1)
                    .addComponent(rbssd1)
                    .addComponent(cmbstor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtcase)
                            .addComponent(cmbCase, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbRam, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chckDual)
                            .addComponent(txtram))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtvga)
                            .addComponent(cmbvga, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtpsu)
                            .addComponent(cmbpsu, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(chckkursi)
                        .addGap(7, 7, 7)
                        .addComponent(chckmic))
                    .addComponent(txtbundle)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chckkibot)
                            .addComponent(chckmouse))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chckspeaker)
                            .addComponent(chckmonitor))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11))
                                .addGap(49, 49, 49))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(70, 70, 70)))))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSetuju, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesan, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chckkibotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chckkibotActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chckkibotActionPerformed

    private void cmbProciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProciActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbProciActionPerformed

    private void btnSetujuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetujuActionPerformed
        // TODO add your handling code here:
        //        processor
        pilihProcessor = cmbProci.getSelectedItem().toString();

        //        motherboard
        pilihMotherboard = cmbMobo.getSelectedItem().toString();

        //        Ram
        if (chckDual.isSelected()) {
            channel = "Dual Channel";
        } else {
            channel = "";
        }

        pilihRam = cmbRam.getSelectedItem().toString();

        //        graphiccard
        pilihGraphiccard = cmbvga.getSelectedItem().toString();

        //        psu
        pilihPsu = cmbpsu.getSelectedItem().toString();

        //        Storage0
        if (rbhdd0.isSelected()) {
            storage0 = "HDD";
        } else {
            storage0 = "SSD";
        }

        pilihStorage0 = cmbstor0.getSelectedItem().toString();

        //        Storage1
        if (rbhdd1.isSelected()) {
            storage1 = "HDD";
        } else {
            storage1 = "SSD";
        }

        pilihStorage1 = cmbstor1.getSelectedItem().toString();

//        case
        pilihCase = cmbCase.getSelectedItem().toString();

//        Bundle
        if (chckkibot.isSelected()) {
            kibot = "Keyboard";
        } else {
            kibot = "";
        }
        if (chckmouse.isSelected()) {
            mouse = "Mouse + Pad";
        } else {
            mouse = "";
        }
        if (chckkursi.isSelected()) {
            kursi = "Gaming Chair";
        } else {
            kursi = "";
        }
        if (chckspeaker.isSelected()) {
            speaker = "Speaker";
        } else {
            speaker = "";
        }
        if (chckmonitor.isSelected()) {
            monitor = "Monitor";
        } else {
            monitor = "";
        }
        if (chckmic.isSelected()) {
            mic = "Mic + ARM";
        } else {
            mic = "";
        }

        // Mengambil dan menghitung total harga
        txtHasil.setText("Processor\t: " + pilihProcessor
                + "\nMotherboard\t: " + pilihMotherboard
                + "\nRam\t: " + channel + "" + pilihRam
                + "\nGPU\t: " + pilihGraphiccard
                + "\nPSU\t: " + pilihPsu
                + "\nStorage0\t: " + storage0 + "" + pilihStorage0
                + "\nStorage\t: " + storage1 + "" + pilihStorage1
                + "\nCase\t: " + pilihCase
                + "\nBundle\t: " + "\n" + kibot + "\n" + mouse + "\n" + kursi + "\n" + speaker + "\n" + monitor + "\n" + mic);

//        confrim
        answer = JOptionPane.showConfirmDialog(this, "Sudah yakin dengan pilihan anda?");

        switch (answer) {
            case JOptionPane.YES_OPTION:
                JOptionPane.showMessageDialog(this, txtHasil, "Cek", JOptionPane.INFORMATION_MESSAGE);
                break;
            case JOptionPane.NO_OPTION:
                JOptionPane.showMessageDialog(this, "Silahkan pilih ulang");
                break;
            default:
                throw new AssertionError("masukan inputan yang benar");
        }
    }//GEN-LAST:event_btnSetujuActionPerformed

    private void chckkursiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chckkursiActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_chckkursiActionPerformed

    private void chckmicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chckmicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chckmicActionPerformed

    private void btnPesanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesanActionPerformed
        // Mengambil input dari pengguna untuk data pelanggan
        String namaPelanggan = JOptionPane.showInputDialog(this, "Masukkan nama kamu ");
        String nomorPelanggan = JOptionPane.showInputDialog(this, "Masukkan nomor telepon ");
        String alamatPelanggan = JOptionPane.showInputDialog(this, "Masukkan alamat kamu ");

        // Mengambil dan menghitung total harga
        long totalHarga = calculateTotal();

        // Pastikan txtHasil adalah JTextArea atau JTextField, dan ambil isinya
        String hasilPesanan = txtHasil.getText();  // Jika txtHasil adalah JTextArea

        // Menampilkan pesan konfirmasi dengan nama pelanggan dan total harga
        JOptionPane.showMessageDialog(this, "Nama       : " + namaPelanggan
                + "\nNo WhatsApp  : " + nomorPelanggan
                + "\nAlamat       : " + alamatPelanggan
                + "\nItem yang anda pilih : " + "\n" + hasilPesanan + "\n"
                + "\nTotal Harga yang harus dibayar: Rp " + totalHarga
                + "\nKami akan memberikan informasi pembayaran dari WhatsApp anda, Terimakasih");
    }//GEN-LAST:event_btnPesanActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        cmbProci.setSelectedItem("None");
        cmbMobo.setSelectedItem("None");
        chckDual.setSelected(false);
        cmbRam.setSelectedItem("None");
        cmbvga.setSelectedItem("None");
        cmbpsu.setSelectedItem("None");
        groupStorage0.clearSelection();
        cmbstor0.setSelectedItem("None");
        groupStorage1.clearSelection();
        cmbstor1.setSelectedItem("None");
        cmbCase.setSelectedItem("None");
        chckkibot.setSelected(false);
        chckmouse.setSelected(false);
        chckkursi.setSelected(false);
        chckspeaker.setSelected(false);
        chckmonitor.setSelected(false);
        chckmic.setSelected(false);
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void chckspeakerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chckspeakerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chckspeakerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btnPesan;
    private javax.swing.JButton btnSetuju;
    private javax.swing.JCheckBox chckDual;
    private javax.swing.JCheckBox chckkibot;
    private javax.swing.JCheckBox chckkursi;
    private javax.swing.JCheckBox chckmic;
    private javax.swing.JCheckBox chckmonitor;
    private javax.swing.JCheckBox chckmouse;
    private javax.swing.JCheckBox chckspeaker;
    private javax.swing.JComboBox<String> cmbCase;
    private javax.swing.JComboBox<String> cmbMobo;
    private javax.swing.JComboBox<String> cmbProci;
    private javax.swing.JComboBox<String> cmbRam;
    private javax.swing.JComboBox<String> cmbpsu;
    private javax.swing.JComboBox<String> cmbstor0;
    private javax.swing.JComboBox<String> cmbstor1;
    private javax.swing.JComboBox<String> cmbvga;
    private javax.swing.ButtonGroup groupProcessor;
    private javax.swing.ButtonGroup groupStorage0;
    private javax.swing.ButtonGroup groupStorage1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rbhdd0;
    private javax.swing.JRadioButton rbhdd1;
    private javax.swing.JRadioButton rbssd0;
    private javax.swing.JRadioButton rbssd1;
    private javax.swing.JTextArea txtHasil;
    private javax.swing.JLabel txtProci;
    private javax.swing.JLabel txtTools;
    private javax.swing.JLabel txtbundle;
    private javax.swing.JLabel txtcase;
    private javax.swing.JLabel txtpsu;
    private javax.swing.JLabel txtram;
    private javax.swing.JLabel txtvga;
    // End of variables declaration//GEN-END:variables
}
